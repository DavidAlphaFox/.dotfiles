#/bin/sh
SBCL=`which sbcl`
CURL=`which curl`
GIT=`which git`

if [ ! -x "$GIT" ]; then
   echo "Can't find git"
   exit
fi

conf_files=".emacs .sbclrc .vimrc .erlang .tmux.conf"
conf_directories=".emacs.d quicklisp .vim"

for item in ${conf_files[@]}; do
    if [ -f "$HOME/$item" ]; then
       echo "Delete link or file $item"
       rm "$HOME/$item"
    fi
done

for item in ${conf_directories[@]}; do
    if [ -d "$HOME/$item" ]; then
       if [ -L "$HOME/$item" ]; then
       	  echo "Delete link $item"
       	  rm "$HOME/$item"
       else
		   echo "Delete directory $item"
	  	   rm -rf "$HOME/$item"
       fi
    fi
done

echo "Create all links"
ln -s .dotfiles/.emacs ../.emacs
ln -s .dotfiles/.emacs.d ../.emacs.d
ln -s .dotfiles/.vim ../.vim
ln -s .dotfiles/.vimrc ../.vimrc
ln -s .dotfiles/.erlang ../.erlang
ln -s .dotfiles/.tmux.conf ../.tmux.conf

if [ -d "$HOME/.vim/bundle/" ]; then
   echo "Delete all files in .vim/bundle"
   rm -rf "$HOME/.vim/bundle/"
   mkdir "$HOME/.vim/bundle/"
fi

echo "Clone vundle"
git clone git://github.com/gmarik/vundle.git ~/.vim/bundle/vundle

echo "Setup quicklisp"
if [ ! -x "$SBCL" ]; then
   echo "Can't find sbcl.Stop steuping quicklisp"
   exit
fi

if [ ! -x "$CURL" ]; then
   echo "Can't find curl.Stop setuping quicklisp"
   exit
fi

if [ -d "$HOME/.dotfiles/quicklisp" ]; then
   rm -rf "$HOME/.dotfiles/quicklisp/" 
fi

if [ -x "$HOME/.dotfiles/quicklisp.lisp" ]; then
   rm "$HOME/.dotfiles/quicklisp.lisp"
fi

curl -O "http://beta.quicklisp.org/quicklisp.lisp"
sbcl --load ~/.dotfiles/pre_init.lisp

mv ~/quicklisp ~/.dotfiles/
ln -s .dotfiles/quicklisp ../quicklisp

sbcl --load ~/.dotfiles/after_init.lisp

ln -s .dotfiles/.sbclrc ../.sbclrc
rm ~/.dotfiles/*.lisp

= TODO

- putting info dirs at the start of the info path means
  users see a weird ordering of categories.  OTOH we want to
  override later entries.  maybe emacs needs to enforce
  the standard layout?
- put bytecode in a separate directory tree
- perhaps give users a way to recompile their bytecode
  or do it automatically when emacs changes
- give users a way to know whether a package is installed ok
- give users a way to view a package's documentation when it
  only appears in the .el
- use/extend checkdoc so people can tell if their package will work
- "installed" instead of a blank in the status column
- tramp needs its files to be compiled in a certain order.
  how to handle this?  fix tramp?
- on emacs 21 we don't kill the -autoloads.el buffer.  what about 22?
- maybe we need separate .elc directories for various emacs versions
  and also emacs-vs-xemacs.  That way conditional compilation can
  work.  But would this break anything?
- should store the package's keywords in archive-contents, then
  let the users filter the package-menu by keyword.  See
  finder-by-keyword.  (We could also let people view the
  Commentary, but it isn't clear how useful this is.)
- William Xu suggests being able to open a package file without
  installing it
- Interface with desktop.el so that restarting after an install
  works properly
- Implement M-x package-upgrade, to upgrade any/all existing packages
- Use hierarchical layout.  PKG/etc PKG/lisp PKG/info
  ... except maybe lisp?
- It may be nice to have a macro that expands to the package's
  private data dir, aka ".../etc".  Or, maybe data-directory
  needs to be a list (though this would be less nice)
  a few packages want this, eg sokoban
- package menu needs:
    ability to know which packages are built-in & thus not deletable
    it can sometimes print odd results, like 0.3 available but 0.4 active
       why is that?
- Allow multiple versions on the server...?
  [ why bother? ]
- Don't install a package which will invalidate dependencies overall
- Allow something like (or (>= emacs 21.0) (>= xemacs 21.5))
  [ currently thinking, why bother.. KISS ]
- Allow optional package dependencies
  then if we require 'bbdb', bbdb-specific lisp in lisp/bbdb
  and just don't compile to add to load path ...?
- Have a list of archive URLs?  [ maybe there's no point ]
- David Kastrup pointed out on the xemacs list that for GPL it
  is friendlier to ship the source tree.  We could "support" that
  by just having a "src" subdir in the package.  This isn't ideal
  but it probably is not worth trying to support random source
  tree layouts, build schemes, etc.
- Our treatment of the info path is somewhat bogus
- perhaps have an "unstable" tree in ELPA as well as a stable one
